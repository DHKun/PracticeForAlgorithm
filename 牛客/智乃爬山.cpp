#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n;
    cin >> n;
    int a[n];
    int b[n];
    int flag = 0;
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
    }
    for (int i = 1; i < n - 1; i++)
    {
        if (a[i - 1] < a[i] && a[i] > a[i + 1])
        {
            flag = 1;
            b[i] = a[i] - ((a[i - 1] + a[i + 1]) / 2);
        }
    }

    if (flag == 1)
    {
        int max_num = *max_element(b, b + n);
        cout << max_num << endl;
    }
    else
    {
        cout << -1 << endl;
    }
    return 0;
}
/*题目描述:
对于由 n 个整数构成的数组 {a1, a2, ..., an}, 从它的第二个元素开始，一直到它的倒数第二个元素为止，若存在 ai - 1 < ai 且 ai > ai + 1 成立，则称该位置是一个 "山峰", 且该山峰的高度记作:
hi = ai - ⌊(ai - 1 + ai + 1) / 2⌋
现在，请帮智乃找出高度最高的山峰，并告诉她山峰的高度是多少。特别的，如果整个数组都不存在任何一个山峰，则输出 -1 表示无解。
输入描述:
第一行输入一个正整数 n (1 ≤ n ≤ 10^5) 代表数组中的元素数量。
第二行输入 n 个正整数 a1, a2, ..., an (1 ≤ ai ≤ 10^9) 代表数组中的元素。
输出描述:
如果不存在任何一个山峰，直接输出 -1; 否则，输出一个整数，代表高度最高山峰的高度。
示例 1
输入
5
14 15 1 10 1
输出
9
说明
在这个样例中，一共存在两个山峰:
● h2 = 15 - ⌊(14 + 1) / 2⌋ = 15 - 7 = 8;
● h4 = 10 - ⌊(1 + 1) / 2⌋ = 10 - 1 = 9。
所以，高度最高的山峰的高度为 9。*/